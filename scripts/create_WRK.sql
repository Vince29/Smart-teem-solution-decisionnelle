USE DATABASE WRK;

USE SCHEMA public;

CREATE OR REPLACE TABLE CHAMBRE (
    NO_CHAMBRE INTEGER NOT NULL COMMENT 'Numéro de chambre',
    NOM_CHAMBRE VARCHAR(20) NOT NULL COMMENT 'Nom de la chambre',
    NO_ETAGE BYTEINT COMMENT 'Numéro d''étage',
    NOM_BATIMENT VARCHAR(20) COMMENT 'Nom du bâtiment',
    TYPE_CHAMBRE VARCHAR(10) COMMENT 'Type de chambre(simple, double)',
    PRIX_JOUR SMALLINT NOT NULL COMMENT 'Tarif journalier de la chambre',
    DT_CREATION DATE NOT NULL COMMENT 'Date de création de la chambre'
);

CREATE OR REPLACE TABLE TRAITEMENT (
    ID_TRAITEMENT INTEGER NOT NULL COMMENT 'Identifiant du traitement',
    CD_MEDICAMENT INTEGER NOT NULL COMMENT 'Code du médicament',
    CATG_MEDICAMENT VARCHAR(100) NOT NULL COMMENT 'Catégorie de médicament',
    MARQUE_FABRI VARCHAR(100) NOT NULL COMMENT 'Marque du fabricant du médicament',
    QTE_MEDICAMENT SMALLINT COMMENT 'Quantité du médicament',
    DSC_POSOLOGIE VARCHAR(100) NOT NULL COMMENT 'Description de la posologie',
    ID_CONSULT INTEGER NOT NULL COMMENT 'Identifiant de la consultation',
    TS_CREATION_TRAITEMENT TIMESTAMP(0) NOT NULL COMMENT 'Date heure de création du traitement'
);

CREATE OR REPLACE TABLE PERSONNEL (
    ID_PERSONNEL INTEGER NOT NULL COMMENT 'Identifiant du personnel',
    NOM_PERSONNEL VARCHAR(100) NOT NULL COMMENT 'Nom du personnel',
    PRENOM_PERSONNEL VARCHAR(100) NOT NULL COMMENT 'Prénom du personnel',
    FONCTION_PERSONNEL VARCHAR(50) NOT NULL COMMENT 'Fonction du personnel',
    TS_DEBUT_ACTIVITE TIMESTAMP(0) NOT NULL COMMENT 'Date heure de début d''activité à l''hôpital',
    TS_FIN_ACTIVITE TIMESTAMP(0) COMMENT 'Date heure de fin d''activité à l''hôpital',
    RAISON_FIN_ACTIVITE VARCHAR(100) COMMENT 'Raison de la fin d''activité',
    TS_CREATION_PERSONNEL TIMESTAMP(0) NOT NULL COMMENT 'Date heure de création du personnel',
    TS_MAJ_PERSONNEL TIMESTAMP(0) NOT NULL COMMENT 'Date heure de mise à jour du personnel',
    CD_STATUT_PERSONNEL VARCHAR(10) NOT NULL COMMENT 'Code statut du personnel (actif, inactif, suspendu, résilié)'
);

CREATE OR REPLACE TABLE PATIENT (
    ID_PATIENT INTEGER NOT NULL COMMENT 'Identifiant du patient',
    NOM_PATIENT VARCHAR(100) NOT NULL COMMENT 'Nom du patient',
    PRENOM_PATIENT VARCHAR(100) NOT NULL COMMENT 'Prénom du patient',
    DT_NAISS DATE COMMENT 'Date de naissance du patient',
    VILLE_NAISS VARCHAR(100) COMMENT 'Ville de naissance du patient',
    PAYS_NAISS VARCHAR(100) COMMENT 'Pays de naissance du patient',
    NUM_SECU VARCHAR(15) COMMENT 'Numéro de sécurité sociale',
    IND_PAYS_NUM_TELP VARCHAR(5) COMMENT 'Indicatif du pays',
    NUM_TELEPHONE VARCHAR(20) COMMENT 'Numéro de téléphone du patient',
    NUM_VOIE VARCHAR(10) COMMENT 'Numéro de voie de l''adresse postale',
    DSC_VOIE VARCHAR(250) COMMENT 'Libellé de voie de l''adresse postale',
    CMPL_VOIE VARCHAR(250) COMMENT 'Complément d''adresse',
    CD_POSTAL VARCHAR(10) COMMENT 'Code postal',
    VILLE VARCHAR(100) COMMENT 'Ville',
    PAYS VARCHAR(100) COMMENT 'Pays',
    TS_CREATION_PATIENT TIMESTAMP(0) NOT NULL COMMENT 'Date heure de création du patient',
    TS_MAJ_PATIENT TIMESTAMP(0) NOT NULL COMMENT 'Date heure de mise à jour du patient'
);

CREATE OR REPLACE TABLE CONSULTATION (
    ID_CONSULT INTEGER NOT NULL COMMENT 'Identifiant de la consultation',
    ID_PERSONNEL INTEGER NOT NULL COMMENT 'Identifiant du personnel',
    ID_PATIENT INTEGER NOT NULL COMMENT 'Identifiant du patient',
    TS_DEBUT_CONSULT TIMESTAMP(0) NOT NULL COMMENT 'Date heure de début de la consultation',
    TS_FIN_CONSULT TIMESTAMP(0) NOT NULL COMMENT 'Date heure de fin de la consultation',
    POIDS_PATIENT INTEGER NOT NULL COMMENT 'Poids du patient',
    TEMP_PATIENT INTEGER COMMENT 'Température du patient',
    UNIT_TEMP VARCHAR(15) COMMENT 'Unité de température',
    TENSION_PATIENT INTEGER COMMENT 'Tension du patient',
    DSC_PATHO VARCHAR(250) COMMENT 'Description de la pathologie',
    INDIC_DIABETE VARCHAR(10) COMMENT 'Positif au diabète ? True/False',
    ID_TRAITEMENT INTEGER COMMENT 'Identifiant du traitement',
    INDIC_HOSPI VARCHAR(10) COMMENT 'Consultation entraînant une hospitalisation ? True/False'
);

CREATE OR REPLACE TABLE HOSPITALISATION (
    ID_HOSPI INTEGER NOT NULL COMMENT 'Identifiant de l''hospitalisation',
    ID_CONSULT INTEGER NOT NULL COMMENT 'Identifiant de la consultation',
    NO_CHAMBRE SMALLINT NOT NULL COMMENT 'Numéro de chambre',
    TS_DEBUT_HOSPI TIMESTAMP(0) NOT NULL COMMENT 'Date heure de début de l''hospitalisation',
    TS_FIN_HOSPI TIMESTAMP(0) COMMENT 'Date heure de fin de l''hospitalisation',
    COUT_HOSPI FLOAT COMMENT 'Coût de l''hospitalisation',
    ID_PERSONNEL_RESP INTEGER NOT NULL COMMENT 'Identifiant du personnel en charge de l''hospitalisation'
);

CREATE OR REPLACE TABLE MEDICAMENT (
    CD_MEDICAMENT VARCHAR(10) NOT NULL COMMENT 'Code du médicament',
    NOM_MEDICAMENT VARCHAR(250) COMMENT 'Nom du médicament',
    CONDIT_MEDICAMENT VARCHAR(100) COMMENT 'Conditionnement du médicament',
    CATG_MEDICAMENT VARCHAR(100) NOT NULL COMMENT 'Catégorie de médicament',
    MARQUE_FABRI VARCHAR(100) NOT NULL COMMENT 'Marque du fabricant du médicament'
);

CREATE TABLE R_ROOM IF NOT EXISTS(
    ROOM_NUM INTEGER NOT NULL PRIMARY KEY,
    ROOM_NAME VARCHAR(20) NOT NULL,
    FLOR_NUM BYTEINT,
    BULD_NAME VARCHAR(20),
    ROOM_TYP VARCHAR(10),
    ROOM_DAY_RATE SMALLINT NOT NULL,
    CRTN_DT DATE NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

CREATE TABLE R_PART IF NOT EXISTS(
    PART_ID INTEGER NOT NULL PRIMARY KEY,
    SRC_ID INTEGER NOT NULL,
    SRC_TYP VARCHAR(50) NOT NULL
);

CREATE TABLE R_MEDC IF NOT EXISTS(
    MEDC_ID INTEGER NOT NULL PRIMARY KEY,
    MEDC_CD VARCHAR(10) NOT NULL,
    MEDC_NAME VARCHAR(250),
    MEDC_COND VARCHAR(100),
    MEDC_CATG VARCHAR(100) NOT NULL,
    MANF_BRND VARCHAR(100) NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

CREATE TABLE O_INDV IF NOT EXISTS(
    PART_ID INTEGER NOT NULL PRIMARY KEY,
    INDV_NAME VARCHAR(100) NOT NULL,
    INDV_FIRS_NAME VARCHAR(100) NOT NULL,
    INDV_STTS_CD VARCHAR(10) NOT NULL,
    CRTN_DTTM TIMESTAMP(0) NOT NULL,
    UPDT_DTTM TIMESTAMP(0) NOT NULL,
    BIRT_DT DATE,
    BIRT_CITY VARCHAR(100),
    BIRT_CNTR VARCHAR(100),
    SOCL_NUM VARCHAR(15),
    EXEC_ID INTEGER NOT NULL
);

CREATE TABLE O_STFF IF NOT EXISTS(
    PART_ID INTEGER PRIMARY KEY,
    WORK_STRT_DTTM TIMESTAMP(0) NOT NULL,
    WORK_END_DTTM TIMESTAMP(0),
    WORK_END_RESN TIMESTAMP(0),
    EXEC_ID INTEGER NOT NULL
);

CREATE TABLE O_ADDR IF NOT EXISTS(
    PART_ID INTEGER,
    STRT_VALD_DTTM TIMESTAMP(0),
    STRT_NUM VARCHAR(10) NOT NULL,
    STRT_DSC VARCHAR(250) NOT NULL,
    COMP_STRT VARCHAR(250),
    POST_CD VARCHAR(10) NOT NULL,
    CITY_NAME VARCHAR(100),
    CNTR_NAME VARCHAR(100),
    END_VALD_DTTM TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL,
    PRIMARY KEY (PART_ID, STRT_VALD_DTTM)
);

CREATE TABLE O_TELP IF NOT EXISTS(
    PART_ID INTEGER,
    STRT_VALD_DTTM TIMESTAMP(0),
    CNTR_IND VARCHAR(5),
    TELP_NUM VARCHAR(20) NOT NULL,
    END_VALD_DTTM TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL,
    PRIMARY KEY (PART_ID, STRT_VALD_DTTM)
);

CREATE TABLE R_MEDC IF NOT EXISTS(
    MEDC_ID INTEGER PRIMARY KEY,
    MEDC_CD VARCHAR(10) NOT NULL,
    MEDC_NAME VARCHAR(250),
    MEDC_COND VARCHAR(100),
    MEDC_CATG VARCHAR(100) NOT NULL,
    MANF_BRND VARCHAR(100) NOT NULL,
    EXEC_ID INTEGER NOT NULL
);

CREATE TABLE O_CONS IF NOT EXISTS(
    CONS_ID INTEGER PRIMARY KEY,
    STFF_ID INTEGER NOT NULL,
    PATN_ID INTEGER NOT NULL,
    CONS_STRT_DTTM TIMESTAMP(0) NOT NULL,
    CONS_END_DTTM TIMESTAMP(0) NOT NULL,
    PATN_WEGH INTEGER NOT NULL,
    PATN_TEMP INTEGER,
    TEMP_UNIT VARCHAR(15),
    BLD_PRSS INTEGER,
    PATH_DSC VARCHAR(250),
    DIBT_IND BYTEINT,
    TRET_ID INTEGER,
    HOSP_IND INTEGER,
    EXEC_ID INTEGER NOT NULL,
    FOREIGN KEY (STFF_ID) REFERENCES R_PART(PART_ID),
    FOREIGN KEY (PATN_ID) REFERENCES R_PART(PART_ID)
);

CREATE TABLE O_HOSP IF NOT EXISTS (
    HOSP_ID INTEGER PRIMARY KEY,
    CONS_ID INTEGER NOT NULL,
    ROOM_NUM SMALLINT NOT NULL,
    HOSP_STRT_DTTM TIMESTAMP(0) NOT NULL,
    HOSP_END_DTTM TIMESTAMP(0) NOT NULL,
    HOSP_FINL_RATE TIMESTAMP(0) NOT NULL,
    STFF_ID INTEGER NOT NULL,
    EXEC_ID INTEGER NOT NULL,
    FOREIGN KEY (STFF_ID) REFERENCES R_PART (PART_ID),
    FOREIGN KEY (CONS_ID) REFERENCES O_CONS (CONS_ID)
);

CREATE TABLE O_TRET IF NOT EXISTS(
    TRET_ID INTEGER NOT NULL PRIMARY KEY,
    MEDC_ID INTEGER,
    MEDC_QTY SMALLINT,
    DOSG_DSC VARCHAR(100) NOT NULL,
    CONS_ID INTEGER NOT NULL,
    TRET_CRTN_DTTM TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL,
    FOREIGN KEY (CONS_ID) REFERENCES O_CONS (CONS_ID),
    FOREIGN KEY (MEDC_ID) REFERENCES R_MEDC (MEDC_ID)
);